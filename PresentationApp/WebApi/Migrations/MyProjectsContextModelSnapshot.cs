// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi.DataModel;

namespace WebApi.Migrations
{
    [DbContext(typeof(MyProjectsContext))]
    partial class MyProjectsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WebApi.DataModel.Info", b =>
                {
                    b.Property<string>("InfoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdditionalData");

                    b.Property<string>("Content");

                    b.Property<int>("Position");

                    b.Property<int>("ProjectId");

                    b.Property<string>("Type");

                    b.HasKey("InfoId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Infos");

                    b.HasData(
                        new { InfoId = "1", AdditionalData = "", Content = "Project 1 information #1", Position = 0, ProjectId = 1, Type = "text" },
                        new { InfoId = "2", AdditionalData = "", Content = "Project 1 information #2", Position = 1, ProjectId = 1, Type = "text" },
                        new { InfoId = "3", AdditionalData = "", Content = "Project 2 information #1", Position = 0, ProjectId = 2, Type = "text" },
                        new { InfoId = "4", AdditionalData = "", Content = "Project 2 information #2", Position = 1, ProjectId = 2, Type = "text" }
                    );
                });

            modelBuilder.Entity("WebApi.DataModel.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime?>("EndDate");

                    b.Property<string>("Photo");

                    b.Property<int>("Position");

                    b.Property<DateTime?>("StartDate");

                    b.Property<string>("Title");

                    b.Property<string>("UserId");

                    b.HasKey("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");

                    b.HasData(
                        new { ProjectId = 1, Description = "Description of project 1", Photo = "unnamed1.jpg", Position = 0, Title = "Demo 1", UserId = "0" },
                        new { ProjectId = 2, Description = "Description of project 1", Photo = "unnamed1.jpg", Position = 1, Title = "Demo 2", UserId = "0" }
                    );
                });

            modelBuilder.Entity("WebApi.DataModel.User", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Salt")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new { UserId = "0", Password = "$2a$11$FoyulI2zI7W7wfJhDhwIkeJmwo0w/RiWHB0XitTYYOYQ8xbio.ld.", Salt = "-lld", UserName = "cristi@la.com" }
                    );
                });

            modelBuilder.Entity("WebApi.DataModel.Info", b =>
                {
                    b.HasOne("WebApi.DataModel.Project", "Project")
                        .WithMany("Infos")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.DataModel.Project", b =>
                {
                    b.HasOne("WebApi.DataModel.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
